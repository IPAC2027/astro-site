---
import GoogleAnalytics from '../components/GoogleAnalytics.astro';
import DarkModeToggle from '../components/DarkModeToggle.astro';

export interface Props {
	title?: string;
	description?: string;
}

const { title = "IPAC27 - 18th International Particle Accelerator Conference", description = "" } = Astro.props;

// Google Analytics configuration
const GA_TRACKING_ID = import.meta.env.PUBLIC_GA_TRACKING_ID;
const isDev = import.meta.env.DEV;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/png" href="/ipac27.png" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
		
		<!-- KaTeX CSS for LaTeX rendering -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV" crossorigin="anonymous">
		
		<!-- Global Typography Styles -->
		<style>
			/* CSS Variables for Light and Dark Mode */
			:root {
				--color-bg-primary: #f8fafc;
				--color-bg-secondary: #ffffff;
				--color-text-primary: #1e293b;
				--color-text-secondary: #475569;
				--color-text-tertiary: #64748b;
				--color-border: #e2e8f0;
				--color-accent: #059669;
				--color-accent-hover: #047857;
			}
			
			.dark {
				--color-bg-primary: #0f172a;
				--color-bg-secondary: #1e293b;
				--color-text-primary: #f1f5f9;
				--color-text-secondary: #cbd5e1;
				--color-text-tertiary: #94a3b8;
				--color-border: #334155;
				--color-accent: #10b981;
				--color-accent-hover: #34d399;
			}
			
			/* Enhanced typography for better readability */
			html {
				font-size: 16px;
			}
			
			body {
				font-size: 1.0625rem; /* 17px */
				line-height: 1.6;
				-webkit-font-smoothing: antialiased;
				-moz-osx-font-smoothing: grayscale;
				transition: background-color 0.3s ease, color 0.3s ease;
			}
			
			/* Responsive typography scale */
			h1 {
				font-size: clamp(2rem, 5vw, 3.75rem);
				line-height: 1.1;
				font-weight: 700;
			}
			
			h2 {
				font-size: clamp(1.5rem, 4vw, 2.25rem);
				line-height: 1.2;
				font-weight: 600;
			}
			
			h3 {
				font-size: clamp(1.25rem, 3vw, 1.875rem);
				line-height: 1.3;
				font-weight: 600;
			}
			
			h4 {
				font-size: clamp(1.125rem, 2.5vw, 1.5rem);
				line-height: 1.4;
				font-weight: 600;
			}
			
			p {
				margin-bottom: 1rem;
			}
			
			/* Improved list spacing */
			ul, ol {
				line-height: 1.6;
				margin-bottom: 1rem;
			}
			
			li {
				margin-bottom: 0.5rem;
			}
			
			/* Better link readability */
			a {
				text-decoration-skip-ink: auto;
			}
		</style>
		
		<!-- Dark Mode Toggle Script -->
		<script is:inline>
			// Initialize theme from localStorage, time-based auto, or system preference
			const theme = (() => {
				// First check if user has manually set a preference
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				
				// If no preference, use time-based auto selection
				// Dark mode: 6 PM (18:00) to 6 AM (06:00)
				// Light mode: 6 AM (06:00) to 6 PM (18:00)
				const hour = new Date().getHours();
				if (hour >= 18 || hour < 6) {
					return 'dark';
				}
				
				// During daytime hours, check system preference as fallback
				if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
					return 'dark';
				}
				
				return 'light';
			})();
			
			if (theme === 'dark') {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark');
			}
			
			// Note: We don't store the theme here anymore
			// The theme is only stored when user manually toggles it
			// This allows automatic time-based theme to work on each visit
		</script>
		
		<!-- Google Analytics -->
		{GA_TRACKING_ID && !isDev && (
			<>
				<script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`}></script>
				<script define:vars={{ GA_TRACKING_ID }}>
					window.dataLayer = window.dataLayer || [];
					function gtag(){dataLayer.push(arguments);}
					gtag('js', new Date());
					gtag('config', GA_TRACKING_ID);
				</script>
			</>
		)}
	</head>
	<body class="font-sans antialiased bg-primary-50 dark:bg-primary-900 text-primary-800 dark:text-primary-100">
		<GoogleAnalytics />
		<DarkModeToggle />
		<slot />
	</body>
</html>
