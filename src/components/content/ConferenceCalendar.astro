---
// Conference Calendar Component
// Displays May 2027 with conference dates (23-28) highlighted

export interface Props {
  year?: number;
  month?: number;
  highlightDates?: number[];
}

const { 
  year = 2027, 
  month = 5, // May (1-based)
  highlightDates = [23, 24, 25, 26, 27, 28] 
} = Astro.props;

// Calendar logic
const monthNames = [
  'January', 'February', 'March', 'April', 'May', 'June',
  'July', 'August', 'September', 'October', 'November', 'December'
];

const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

// Get first day of the month and number of days
const firstDay = new Date(year, month - 1, 1).getDay();
const daysInMonth = new Date(year, month, 0).getDate();

// Generate calendar grid
const calendarDays = [];

// Add empty cells for days before the first day of the month
for (let i = 0; i < firstDay; i++) {
  calendarDays.push(null);
}

// Add all days of the month
for (let day = 1; day <= daysInMonth; day++) {
  calendarDays.push(day);
}

// Conference date details
const conferenceStart = new Date(2027, 4, 23); // May 23, 2027
const conferenceEnd = new Date(2027, 4, 28);   // May 28, 2027
---

<div class="conference-calendar bg-white rounded-lg border border-gray-200 overflow-hidden">
  <!-- Calendar Header -->
  <div class="bg-primary-600 text-white px-4 py-3">
    <h3 class="text-lg font-semibold text-center">
      {monthNames[month - 1]} {year}
    </h3>
    
  </div>

  <!-- Calendar Grid -->
  <div class="p-4">
    <!-- Day Headers -->
    <div class="grid grid-cols-7 gap-1 mb-2">
      {dayNames.map(day => (
        <div class="text-xs font-medium text-gray-500 text-center py-1">
          {day}
        </div>
      ))}
    </div>

    <!-- Calendar Days -->
    <div class="grid grid-cols-7 gap-1">
      {calendarDays.map((day, index) => {
        if (day === null) {
          return <div class="h-8"></div>;
        }

        const isHighlighted = highlightDates.includes(day);
        const isToday = false; // Not needed for future dates
        
        let cellClass = "h-8 flex items-center justify-center text-sm rounded";
        
        if (isHighlighted) {
          cellClass += " bg-primary-600 text-white font-semibold";
        } else {
          cellClass += " text-gray-700 hover:bg-gray-100";
        }

        return (
          <div class={cellClass}>
            <span>{day}</span>
          </div>
        );
      })}
    </div>

    <!-- Legend -->
    <div class="mt-4 pt-3 border-t border-gray-200">
      <div class="flex items-center justify-center space-x-4 text-xs">
        <div class="flex items-center space-x-2">
          <div class="w-3 h-3 bg-primary-600 rounded"></div>
          <span class="text-gray-600">IPAC'27 Conference Days</span>
        </div>
      </div>
      

    </div>
  </div>
</div>

<style>
  .conference-calendar {
    max-width: 100%;
    min-height: 280px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .conference-calendar {
      font-size: 0.875rem;
    }
  }
</style>