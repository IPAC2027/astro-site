---
export interface Props {
  type: 'warning' | 'info' | 'success' | 'highlight';
  content: string;
}

const { type, content } = Astro.props;

/**
 * Get appropriate styling and icon for different alert types
 */
function getAlertConfig(type: string) {
  switch (type) {
    case 'warning':
      return {
        containerClass: 'bg-amber-50 border border-amber-200 rounded-lg p-6 mb-6',
        iconClass: 'w-5 h-5 text-amber-600 mr-3 mt-0.5 flex-shrink-0',
        textClass: 'text-amber-800 font-medium m-0',
        icon: 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z'
      };
    case 'success':
      return {
        containerClass: 'bg-green-50 border border-green-200 rounded-lg p-6 mb-6',
        iconClass: 'w-5 h-5 text-green-600 mr-3 mt-0.5 flex-shrink-0',
        textClass: 'text-green-800 font-medium m-0',
        icon: 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'
      };
    case 'info':
      return {
        containerClass: 'bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6',
        iconClass: 'w-5 h-5 text-blue-600 mr-3 mt-0.5 flex-shrink-0',
        textClass: 'text-blue-800 font-medium m-0',
        icon: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
      };
    case 'highlight':
      return {
        containerClass: 'content-highlight',
        iconClass: '',
        textClass: 'text-primary-800 font-medium m-0',
        icon: ''
      };
    default:
      return {
        containerClass: 'bg-gray-50 border border-gray-200 rounded-lg p-6 mb-6',
        iconClass: 'w-5 h-5 text-gray-600 mr-3 mt-0.5 flex-shrink-0',
        textClass: 'text-gray-800 font-medium m-0',
        icon: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
      };
  }
}

const config = getAlertConfig(type);
---

<div class={config.containerClass}>
  {config.icon ? (
    <div class="flex items-start">
      <svg class={config.iconClass} fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={config.icon}></path>
      </svg>
      <p class={config.textClass}>{content}</p>
    </div>
  ) : (
    <p class={config.textClass}>{content}</p>
  )}
</div>