---
export interface ImportantDate {
  period: string;
  title: string;
  description: string;
  colorScheme: string;
}

export interface ImportantDatesAboutProps {
  importantDates: {
    title: string;
    subtitle: string;
    dates: ImportantDate[];
    conferenceStart: {
      date: string;
      title: string;
      colorScheme: string;
    };
  };
  about: {
    title: string;
    description: string[];
    learnMoreLink: {
      text: string;
      href: string;
    };
    chairWelcome: {
      message: string;
      chair: {
        name: string;
        title: string;
        institution: string;
        image: string;
      };
    };
  };
}

const { importantDates, about } = Astro.props;

const getColorClasses = (colorScheme: string) => {
  switch (colorScheme) {
    case 'primary-accent':
      return {
        bg: 'bg-gradient-to-br from-primary-50 to-accent-50 dark:from-primary-800 dark:to-primary-700',
        border: 'border-primary-200 dark:border-primary-600',
        dot: 'bg-primary-600 dark:bg-primary-500',
        text: 'text-primary-700 dark:text-primary-300'
      };
    case 'accent-primary':
      return {
        bg: 'bg-gradient-to-br from-accent-50 to-primary-50 dark:from-primary-700 dark:to-primary-800',
        border: 'border-accent-200 dark:border-accent-600',
        dot: 'bg-accent-600 dark:bg-accent-500',
        text: 'text-accent-700 dark:text-accent-300'
      };
    default:
      return {
        bg: 'bg-gradient-to-br from-primary-50 to-accent-50 dark:from-primary-800 dark:to-primary-700',
        border: 'border-primary-200 dark:border-primary-600',
        dot: 'bg-primary-600 dark:bg-primary-500',
        text: 'text-primary-700 dark:text-primary-300'
      };
  }
};
---

<section class="py-20 bg-gradient-to-b from-white dark:from-primary-900 to-primary-50 dark:to-primary-800 transition-colors duration-300">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-12">
      
      <!-- Important Dates - Left Column (30% width) -->
      <div class="lg:col-span-4">
        <!-- Timeline Container -->
        <div class="relative">
          <!-- Vertical Timeline Line -->
          <div class="absolute left-2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary-200 dark:from-primary-700 via-accent-200 dark:via-accent-700 to-red-200 dark:to-red-700"></div>
          
          <div class="space-y-4">
            {/* Title as first timeline item */}
            <div class="timeline-item relative animate-initial">
              <!-- Special Title Dot -->
              <div class="absolute left-0.5 top-3 w-4 h-4 bg-gradient-to-br from-primary-500 to-accent-500 rounded-full border-2 border-white dark:border-primary-700 shadow-lg z-10">
                <div class="absolute inset-1 bg-gradient-to-br from-primary-400 to-accent-400 rounded-full animate-pulse"></div>
              </div>
              
              <!-- Title Card integrated into timeline -->
              <div class="ml-8 group cursor-default">
                <div class="bg-gradient-to-br from-primary-50 to-accent-50 dark:from-primary-800 dark:to-primary-700 border-2 border-primary-200 dark:border-primary-600 rounded-lg p-4 shadow-md transition-colors duration-300">
                  <div class="text-lg font-bold text-primary-700 dark:text-primary-200 mb-1">{importantDates.title}</div>
                  <p class="text-sm text-primary-600 dark:text-primary-300">{importantDates.subtitle}</p>
                </div>
              </div>
            </div>
            
            {importantDates.dates.map((date: ImportantDate, index: number) => {
              const colors = getColorClasses(date.colorScheme);
              return (
                <div class="timeline-item relative animate-initial" style={`--animation-delay: ${(index + 1) * 150}ms`}>
                  <!-- Timeline Dot -->
                  <div class={`absolute left-1 top-4 w-3 h-3 ${colors.dot} rounded-full border-2 border-white dark:border-primary-800 shadow-md z-10`}>
                    <div class={`absolute inset-0.5 ${colors.dot} rounded-full animate-pulse`}></div>
                  </div>
                  
                  <!-- Date Card -->
                  <div class={`ml-8 group hover:scale-105 transition-all duration-300 cursor-default`}>
                    <div class={`${colors.bg} ${colors.border} border-2 rounded-lg p-4 shadow-md hover:shadow-lg transition-all duration-300`}>
                      <div class={`text-base font-bold ${colors.text} mb-1`}>{date.period}</div>
                      <h3 class="font-semibold text-primary-900 dark:text-primary-100 text-base mb-1">{date.title}</h3>
                      {date.description && (
                        <p class="text-primary-600 dark:text-primary-300 text-sm">{date.description}</p>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
            
            {/* Conference Start - Special Highlight */}
            <div class="timeline-item relative animate-initial" style={`--animation-delay: ${(importantDates.dates.length + 1) * 150}ms`}>
              <!-- Special Star Icon -->
              <div class="absolute left-0 top-2.5 w-5 h-5 bg-gradient-to-r from-red-500 to-accent-500 rounded-full flex items-center justify-center shadow-md z-10">
                <svg class="w-2.5 h-2.5 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              
              <!-- Conference Start Card -->
              <div class="ml-8 group hover:scale-105 transition-all duration-300">
                <div class="bg-gradient-to-r from-red-50 to-accent-50 dark:from-red-900/30 dark:to-accent-900/30 border-2 border-red-200 dark:border-red-700 rounded-lg p-4 shadow-md hover:shadow-lg transition-all duration-300">
                  <div class="text-base font-bold text-red-600 dark:text-red-400 mb-1">{importantDates.conferenceStart.date}</div>
                  <h3 class="font-semibold text-primary-900 dark:text-primary-100 text-base flex items-center">
                    {importantDates.conferenceStart.title}
                    <span class="ml-2 text-lg">ðŸŽ‰</span>
                  </h3>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- About IPAC27 - Right Column (70% width) -->
      <div class="lg:col-span-8">
        
        <!-- About Header -->
        <div class="animate-card animate-initial mb-12">
          <h2 class="text-4xl font-heading font-bold text-primary-900 dark:text-primary-100 mb-6">{about.title}</h2>
          
          {about.description.map((paragraph: string, index: number) => (
            <p class="text-lg text-primary-600 dark:text-primary-300 mb-6 leading-relaxed">{paragraph}</p>
          ))}
        </div>

        <!-- Chair Welcome Message -->
        <div class="animate-card animate-initial mb-12">
          <div class="relative">
            <!-- Decorative background pattern -->
            <div class="absolute inset-0 bg-gradient-to-br from-primary-50 via-accent-50 to-blue-50 dark:from-primary-800 dark:via-primary-700 dark:to-primary-800 rounded-2xl transform rotate-1"></div>
            <div class="relative bg-white dark:bg-primary-800 rounded-2xl shadow-2xl hover:shadow-3xl overflow-hidden transform -rotate-0.5 hover:rotate-0 hover:scale-[1.01] transition-all duration-500">
              <div class="p-8">
                <div class="flex items-start space-x-6">
                  <!-- Enhanced Chair Photo -->
                  <div class="flex-shrink-0">
                    <div class="relative">
                      <!-- Glowing effect -->
                      <div class="absolute inset-0 w-24 h-24 bg-gradient-to-br from-primary-400 to-accent-400 rounded-full blur-md opacity-30 animate-pulse"></div>
                      <div class="relative w-24 h-24 bg-gradient-to-br from-primary-100 to-accent-100 dark:from-primary-700 dark:to-accent-700 rounded-full flex items-center justify-center border-4 border-white dark:border-primary-600 shadow-xl">
                        <svg class="w-12 h-12 text-primary-600 dark:text-primary-300" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                        </svg>
                      </div>
                    </div>
                  </div>
                  
                  <div class="flex-1">
                    <!-- Enhanced quote styling -->
                    <div class="relative">
                      <!-- Quote decoration -->
                      <div class="absolute -top-2 -left-2 text-4xl text-primary-200 dark:text-primary-700 font-serif">"</div>
                      <blockquote class="text-primary-800 dark:text-primary-200 mb-6 text-lg leading-relaxed italic font-medium pl-4 border-l-4 border-gradient-to-b from-primary-400 to-accent-400">
                        {about.chairWelcome.message}
                      </blockquote>
                      <div class="absolute -bottom-4 -right-2 text-4xl text-primary-200 dark:text-primary-700 font-serif">"</div>
                    </div>
                        
                        <!-- Enhanced signature section -->
                        <div class="bg-gradient-to-r from-primary-50/50 to-accent-50/50 dark:from-primary-700/50 dark:to-primary-600/50 rounded-lg p-4 border border-primary-100 dark:border-primary-600 transition-colors duration-300">
                          <div class="flex items-center space-x-3">
                            <div class="w-1 h-12 bg-gradient-to-b from-primary-500 to-accent-500 rounded-full"></div>
                            <div>
                              <p class="font-bold text-primary-900 dark:text-primary-100 text-lg">{about.chairWelcome.chair.name}</p>
                              <p class="text-primary-600 dark:text-primary-200 font-semibold text-base">{about.chairWelcome.chair.title}</p>
                              <p class="text-primary-600 dark:text-primary-300 text-sm font-medium">{about.chairWelcome.chair.institution}</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
      </div>
    </div>
  </div>
</section>

<style>
  /* Scroll animation styles */
  .animate-initial {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
    transition-delay: var(--animation-delay, 0ms);
  }
  
  .animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  .animate-out {
    opacity: 0;
    transform: translateY(50px);
  }
  
  /* Timeline item stagger delays */
  .timeline-item:nth-child(1) { --animation-delay: 0ms; }
  .timeline-item:nth-child(2) { --animation-delay: 150ms; }
  .timeline-item:nth-child(3) { --animation-delay: 300ms; }
  .timeline-item:nth-child(4) { --animation-delay: 450ms; }
  .timeline-item:nth-child(5) { --animation-delay: 600ms; }
  .timeline-item:nth-child(6) { --animation-delay: 750ms; }
  
  /* About section cards stagger */
  .animate-card:nth-child(1) { --animation-delay: 200ms; }
  .animate-card:nth-child(2) { --animation-delay: 400ms; }
  .animate-card:nth-child(3) { --animation-delay: 600ms; }
</style>

<script>
  // Scroll-triggered animations
  class ScrollAnimations {
    private observer: IntersectionObserver;
    
    constructor() {
      this.observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              element.classList.add('animate-in');
              element.classList.remove('animate-out');
            }
          });
        },
        {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        }
      );
    }
    
    public observeElements(selector: string): void {
      const elements = document.querySelectorAll(selector);
      elements.forEach((element) => {
        this.observer.observe(element);
      });
    }
    
    public disconnect(): void {
      this.observer.disconnect();
    }
  }
  
  // Initialize animations when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const scrollAnimations = new ScrollAnimations();
    
    // Animate timeline items and cards
    scrollAnimations.observeElements('.timeline-item');
    scrollAnimations.observeElements('.animate-card');
  });
</script>