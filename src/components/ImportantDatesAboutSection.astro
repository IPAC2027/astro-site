---
export interface ImportantDate {
  period: string;
  title: string;
  description: string;
  colorScheme: string;
}

export interface ImportantDatesAboutProps {
  importantDates: {
    title: string;
    subtitle: string;
    dates: ImportantDate[];
    conferenceStart: {
      date: string;
      title: string;
      colorScheme: string;
    };
  };
  about: {
    title: string;
    description: string[];
    learnMoreLink: {
      text: string;
      href: string;
    };
    highlights: {
      title: string;
      items: string[];
    };
  };
}

const { importantDates, about } = Astro.props;

const getColorClasses = (colorScheme: string) => {
  switch (colorScheme) {
    case 'primary-accent':
      return 'bg-gradient-to-br from-primary-50 to-accent-50 border-primary-100';
    case 'accent-primary':
      return 'bg-gradient-to-br from-accent-50 to-primary-50 border-accent-100';
    default:
      return 'bg-gradient-to-br from-primary-50 to-accent-50 border-primary-100';
  }
};

const getTextColor = (colorScheme: string) => {
  return colorScheme === 'accent-primary' ? 'text-accent-600' : 'text-primary-600';
};
---

<section class="py-16 bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-10 gap-12">
      <!-- Important Dates - Left Column (30% width) -->
      <div class="lg:col-span-3">
        <div class="text-left mb-8">
          <h2 class="text-3xl font-heading font-bold text-gray-900 mb-4">{importantDates.title}</h2>
          <p class="text-lg text-gray-600">{importantDates.subtitle}</p>
        </div>
        
        <div class="relative">
          <div class="space-y-2">
            {importantDates.dates.map((date: ImportantDate, index: number) => (
              <div class="relative">
                {/* Timeline line */}
                {index < importantDates.dates.length - 1 && (
                  <div class="absolute left-4 top-10 w-0.5 h-6 bg-gray-300"></div>
                )}
                
                {/* Timeline dot */}
                <div class="absolute left-2.5 top-5 w-3 h-3 bg-primary-600 rounded-full border-2 border-white shadow-sm"></div>
                
                {/* Content */}
                <div class={`ml-8 rounded-lg p-2 border ${getColorClasses(date.colorScheme)}`}>
                  <div class={`font-bold text-base mb-0.5 ${getTextColor(date.colorScheme)}`}>{date.period}</div>
                  <h3 class="font-semibold text-gray-900 text-sm">{date.title}</h3>
                </div>
              </div>
            ))}
            
            {/* Arrow pointing to conference start */}
            <div class="relative mt-3">
              <div class="absolute left-2.5 top-0 w-3 h-3">
                <svg class="w-6 h-6 text-red-500 transform -translate-x-1.5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              <div class="ml-8 p-2 bg-gradient-to-r from-red-50 to-accent-50 border border-red-200 rounded-lg">
                <div class="text-red-600 font-bold text-base mb-0.5">{importantDates.conferenceStart.date}</div>
                <h3 class="font-semibold text-gray-900 text-sm">{importantDates.conferenceStart.title}</h3>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- About IPAC27 - Right Column (70% width) -->
      <div class="lg:col-span-7">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
          <div>
            <h2 class="text-3xl font-heading font-bold text-gray-900 mb-6">{about.title}</h2>
            {about.description.map((paragraph: string) => (
              <p class="text-lg text-gray-600 mb-6">{paragraph}</p>
            ))}
            <a href={about.learnMoreLink.href} class="inline-flex items-center text-primary-600 hover:text-primary-700 font-semibold">
              {about.learnMoreLink.text}
              <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
          
          <div class="bg-white rounded-lg shadow-lg p-8">
            <h3 class="text-xl font-semibold text-gray-900 mb-6">{about.highlights.title}</h3>
            <ul class="space-y-4">
              {about.highlights.items.map((item: string) => (
                <li class="flex items-start">
                  <div class="flex-shrink-0 w-6 h-6 bg-primary-100 rounded-full flex items-center justify-center mt-1">
                    <div class="w-2 h-2 bg-primary-600 rounded-full"></div>
                  </div>
                  <span class="ml-3 text-gray-600">{item}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
