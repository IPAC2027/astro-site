---
export interface ProgramTrack {
  title: string;
  description: string;
  icon: string;
  highlights: string[];
  link: string;
  color: 'primary' | 'accent' | 'blue' | 'green' | 'orange' | 'yellow';
}

export interface ProgramHighlightsProps {
  title: string;
  subtitle: string;
  tracks: ProgramTrack[];
}

const { title, subtitle, tracks } = Astro.props;

const getColorClasses = (color: string) => {
  switch (color) {
    case 'primary':
      return {
        bg: 'bg-primary-50 dark:bg-primary-800 hover:bg-primary-100 dark:hover:bg-primary-700',
        border: 'border-primary-200 dark:border-primary-700',
        icon: 'bg-primary-500 dark:bg-primary-600 text-white',
        title: 'text-primary-900 dark:text-primary-100',
        button: 'bg-primary-600 hover:bg-primary-700 dark:bg-primary-500 dark:hover:bg-primary-600 text-white',
        checkmark: 'text-primary-600 dark:text-primary-400'
      };
    case 'accent':
      return {
        bg: 'bg-accent-50 dark:bg-accent-900/30 hover:bg-accent-100 dark:hover:bg-accent-800/40',
        border: 'border-accent-200 dark:border-accent-700',
        icon: 'bg-accent-500 dark:bg-accent-600 text-white',
        title: 'text-accent-900 dark:text-accent-300',
        button: 'bg-accent-600 hover:bg-accent-700 dark:bg-accent-500 dark:hover:bg-accent-600 text-white',
        checkmark: 'text-accent-600 dark:text-accent-400'
      };
    case 'blue':
      return {
        bg: 'bg-blue-50 dark:bg-blue-900/30 hover:bg-blue-100 dark:hover:bg-blue-800/40',
        border: 'border-blue-200 dark:border-blue-700',
        icon: 'bg-blue-500 dark:bg-blue-600 text-white',
        title: 'text-blue-900 dark:text-blue-300',
        button: 'bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white',
        checkmark: 'text-blue-600 dark:text-blue-400'
      };
    case 'green':
      return {
        bg: 'bg-green-50 dark:bg-green-900/30 hover:bg-green-100 dark:hover:bg-green-800/40',
        border: 'border-green-200 dark:border-green-700',
        icon: 'bg-green-500 dark:bg-green-600 text-white',
        title: 'text-green-900 dark:text-green-300',
        button: 'bg-green-600 hover:bg-green-700 dark:bg-green-500 dark:hover:bg-green-600 text-white',
        checkmark: 'text-green-600 dark:text-green-400'
      };
    case 'orange':
      return {
        bg: 'bg-orange-50 dark:bg-orange-900/30 hover:bg-orange-100 dark:hover:bg-orange-800/40',
        border: 'border-orange-200 dark:border-orange-700',
        icon: 'bg-orange-500 dark:bg-orange-600 text-white',
        title: 'text-orange-900 dark:text-orange-300',
        button: 'bg-orange-600 hover:bg-orange-700 dark:bg-orange-500 dark:hover:bg-orange-600 text-white',
        checkmark: 'text-orange-600 dark:text-orange-400'
      };
    case 'yellow':
      return {
        bg: 'bg-yellow-50 dark:bg-yellow-900/30 hover:bg-yellow-100 dark:hover:bg-yellow-800/40',
        border: 'border-yellow-200 dark:border-yellow-700',
        icon: 'bg-yellow-500 dark:bg-yellow-600 text-white',
        title: 'text-yellow-900 dark:text-yellow-300',
        button: 'bg-yellow-600 hover:bg-yellow-700 dark:bg-yellow-500 dark:hover:bg-yellow-600 text-white',
        checkmark: 'text-yellow-600 dark:text-yellow-400'
      };
    default:
      return {
        bg: 'bg-primary-50 dark:bg-primary-800 hover:bg-primary-100 dark:hover:bg-primary-700',
        border: 'border-primary-200 dark:border-primary-700',
        icon: 'bg-primary-500 dark:bg-primary-600 text-white',
        title: 'text-primary-900 dark:text-primary-100',
        button: 'bg-primary-600 hover:bg-primary-700 dark:bg-primary-500 dark:hover:bg-primary-600 text-white',
        checkmark: 'text-primary-600 dark:text-primary-400'
      };
  }
};
---

<section class="py-20 bg-primary-50 dark:bg-primary-900 transition-colors duration-300">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl font-heading font-bold text-primary-900 dark:text-primary-100 mb-4">{title}</h2>
      <p class="text-xl text-primary-600 dark:text-primary-300 max-w-3xl mx-auto">{subtitle}</p>
    </div>
    
    <!-- Program Cards Grid -->
        <!-- Program Cards Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      {tracks.map((track) => {
        const colors = getColorClasses(track.color);
        return (
          <div class={`program-card group relative rounded-2xl border-2 ${colors.border} ${colors.bg} p-8 transition-all duration-300 hover:shadow-xl hover:-translate-y-2 animate-initial`}>
            <!-- Icon -->
            <div class={`inline-flex items-center justify-center w-14 h-14 rounded-xl ${colors.icon} mb-6 group-hover:scale-110 transition-transform duration-300`}>
              <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={track.icon}></path>
              </svg>
            </div>
            
            <!-- Title -->
            <h3 class={`text-xl font-semibold ${colors.title} mb-4`}>{track.title}</h3>
            
            <!-- Description -->
            <p class="text-primary-600 dark:text-primary-300 mb-6 leading-relaxed">{track.description}</p>
            
            <!-- Highlights -->
            <ul class="space-y-2 mb-8">
              {track.highlights.map((highlight) => (
                <li class="flex items-start">
                  <svg class={`w-4 h-4 mt-1 mr-2 flex-shrink-0 ${colors.checkmark}`} fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="text-sm text-primary-600 dark:text-primary-300">{highlight}</span>
                </li>
              ))}
            </ul>
            
            <!-- CTA Button -->
            <a 
              href={track.link} 
              class={`inline-flex items-center justify-center w-full px-4 py-3 text-sm font-semibold rounded-lg transition-all duration-200 ${colors.button} group-hover:shadow-lg`}
            >
              Learn More
              <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
        );
      })}
    </div>
    
    <!-- Bottom CTA -->
    <div class="text-center mt-16">
      <div class="animate-card bg-white dark:bg-primary-800 rounded-2xl p-8 shadow-lg border border-primary-200 dark:border-primary-700 animate-initial">
        <h3 class="text-2xl font-semibold text-primary-900 dark:text-primary-100 mb-4">Ready to Join IPAC27?</h3>
        <p class="text-primary-600 dark:text-primary-300 mb-6 max-w-2xl mx-auto">
          Be part of the world's premier particle accelerator conference and contribute to cutting-edge research
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="/registration/conference-registration" 
             class="bg-primary-600 hover:bg-primary-700 text-white px-8 py-4 rounded-lg font-semibold transition-colors duration-200 inline-flex items-center justify-center">
            Register Now
            <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5-5 5M6 12h12"></path>
            </svg>
          </a>
          <a href="/authors/abstract-submission" 
             class="border-2 border-primary-600 text-primary-600 hover:bg-primary-50 px-8 py-4 rounded-lg font-semibold transition-colors duration-200 inline-flex items-center justify-center">
            Submit Abstract
            <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Scroll animation styles */
  .animate-initial {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
    transition-delay: var(--animation-delay, 0ms);
  }
  
  .animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  .animate-out {
    opacity: 0;
    transform: translateY(50px);
  }
  
  /* Stagger animation delays for program cards */
  .program-card:nth-child(1) { --animation-delay: 0ms; }
  .program-card:nth-child(2) { --animation-delay: 150ms; }
  .program-card:nth-child(3) { --animation-delay: 300ms; }
  .program-card:nth-child(4) { --animation-delay: 450ms; }
</style>

<script>
  // Scroll-triggered animations
  class ScrollAnimations {
    private observer: IntersectionObserver;
    
    constructor() {
      this.observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              element.classList.add('animate-in');
              element.classList.remove('animate-out');
            }
          });
        },
        {
          threshold: 0.1,
          rootMargin: '0px 0px -100px 0px'
        }
      );
    }
    
    public observeElements(selector: string): void {
      const elements = document.querySelectorAll(selector);
      elements.forEach((element) => {
        this.observer.observe(element);
      });
    }
    
    public disconnect(): void {
      this.observer.disconnect();
    }
  }
  
  // Initialize animations when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const scrollAnimations = new ScrollAnimations();
    
    // Animate program cards and other elements
    scrollAnimations.observeElements('.program-card');
    scrollAnimations.observeElements('.animate-card');
  });
</script>
</section>