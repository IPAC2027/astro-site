---
export interface ImportantDate {
  period: string;
  title: string;
  description: string;
  colorScheme: string;
}

export interface ImportantDatesAboutProps {
  importantDates: {
    title: string;
    subtitle: string;
    dates: ImportantDate[];
    conferenceStart: {
      date: string;
      title: string;
      colorScheme: string;
    };
  };
  about: {
    title: string;
    description: string[];
    learnMoreLink: {
      text: string;
      href: string;
    };
    highlights: {
      title: string;
      items: string[];
    };
    chairWelcome: {
      message: string;
      chair: {
        name: string;
        title: string;
        institution: string;
        image: string;
      };
    };
    stats: {
      edition: string;
      expectedPapers: string;
      countries: string;
      sponsors: string;
    };
  };
}

const { importantDates, about } = Astro.props;

const getColorClasses = (colorScheme: string) => {
  switch (colorScheme) {
    case 'primary-accent':
      return {
        bg: 'bg-gradient-to-br from-primary-50 to-accent-50',
        border: 'border-primary-200',
        dot: 'bg-primary-600',
        text: 'text-primary-700'
      };
    case 'accent-primary':
      return {
        bg: 'bg-gradient-to-br from-accent-50 to-primary-50',
        border: 'border-accent-200',
        dot: 'bg-accent-600',
        text: 'text-accent-700'
      };
    default:
      return {
        bg: 'bg-gradient-to-br from-primary-50 to-accent-50',
        border: 'border-primary-200',
        dot: 'bg-primary-600',
        text: 'text-primary-700'
      };
  }
};
---

<section class="py-20 bg-gradient-to-b from-white to-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-16">
      
      <!-- Important Dates - Left Column (40% width) -->
      <div class="lg:col-span-5">
        <div class="text-left mb-12 animate-card animate-initial">
          <h2 class="text-4xl font-heading font-bold text-gray-900 mb-4">{importantDates.title}</h2>
          <p class="text-xl text-gray-600">{importantDates.subtitle}</p>
        </div>
        
        <!-- Timeline Container -->
        <div class="relative">
          <!-- Vertical Timeline Line -->
          <div class="absolute left-4 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary-200 via-accent-200 to-red-200"></div>
          
          <div class="space-y-6">
            {importantDates.dates.map((date: ImportantDate, index: number) => {
              const colors = getColorClasses(date.colorScheme);
              return (
                <div class="timeline-item relative animate-initial" style={`--animation-delay: ${index * 150}ms`}>
                  <!-- Timeline Dot -->
                  <div class={`absolute left-2 top-6 w-4 h-4 ${colors.dot} rounded-full border-4 border-white shadow-lg z-10`}>
                    <div class={`absolute inset-1 ${colors.dot} rounded-full animate-pulse`}></div>
                  </div>
                  
                  <!-- Date Card -->
                  <div class={`ml-12 group hover:scale-105 transition-all duration-300 cursor-default`}>
                    <div class={`${colors.bg} ${colors.border} border-2 rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300`}>
                      <div class={`text-lg font-bold ${colors.text} mb-2`}>{date.period}</div>
                      <h3 class="font-semibold text-gray-900 text-lg mb-2">{date.title}</h3>
                      {date.description && (
                        <p class="text-gray-600 text-sm">{date.description}</p>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
            
            {/* Conference Start - Special Highlight */}
            <div class="timeline-item relative animate-initial" style={`--animation-delay: ${importantDates.dates.length * 150}ms`}>
              <!-- Special Star Icon -->
              <div class="absolute left-0 top-4 w-8 h-8 bg-gradient-to-r from-red-500 to-accent-500 rounded-full flex items-center justify-center shadow-lg z-10">
                <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              
              <!-- Conference Start Card -->
              <div class="ml-12 group hover:scale-105 transition-all duration-300">
                <div class="bg-gradient-to-r from-red-50 to-accent-50 border-2 border-red-200 rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300">
                  <div class="text-lg font-bold text-red-600 mb-2">{importantDates.conferenceStart.date}</div>
                  <h3 class="font-semibold text-gray-900 text-lg flex items-center">
                    {importantDates.conferenceStart.title}
                    <span class="ml-2 text-2xl">ðŸŽ‰</span>
                  </h3>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- About IPAC27 - Right Column (60% width) -->
      <div class="lg:col-span-7">
        
        <!-- About Header -->
        <div class="animate-card animate-initial mb-12">
          <h2 class="text-4xl font-heading font-bold text-gray-900 mb-6">{about.title}</h2>
          
          <!-- Conference Stats -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
            <div class="text-center p-4 bg-primary-50 rounded-lg border border-primary-100">
              <div class="text-2xl font-bold text-primary-600">{about.stats.edition}</div>
              <div class="text-sm text-gray-600">Edition</div>
            </div>
            <div class="text-center p-4 bg-accent-50 rounded-lg border border-accent-100">
              <div class="text-2xl font-bold text-accent-600">{about.stats.expectedPapers}</div>
              <div class="text-sm text-gray-600">Papers</div>
            </div>
            <div class="text-center p-4 bg-blue-50 rounded-lg border border-blue-100">
              <div class="text-2xl font-bold text-blue-600">{about.stats.countries}</div>
              <div class="text-sm text-gray-600">Countries</div>
            </div>
            <div class="text-center p-4 bg-green-50 rounded-lg border border-green-100">
              <div class="text-2xl font-bold text-green-600">{about.stats.sponsors}</div>
              <div class="text-sm text-gray-600">Sponsors</div>
            </div>
          </div>
          
          {about.description.map((paragraph: string, index: number) => (
            <p class="text-lg text-gray-600 mb-6 leading-relaxed">{paragraph}</p>
          ))}
        </div>

        <!-- Chair Welcome Message -->
        <div class="animate-card animate-initial mb-12">
          <div class="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden">
            <div class="bg-gradient-to-r from-primary-600 to-accent-600 p-1">
              <div class="bg-white rounded-xl p-8">
                <div class="flex items-start space-x-6">
                  <!-- Chair Photo Placeholder -->
                  <div class="flex-shrink-0">
                    <div class="w-20 h-20 bg-gradient-to-br from-primary-100 to-accent-100 rounded-full flex items-center justify-center border-4 border-white shadow-lg">
                      <svg class="w-10 h-10 text-primary-600" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                      </svg>
                    </div>
                  </div>
                  
                  <div class="flex-1">
                    <blockquote class="text-gray-700 mb-4 text-lg leading-relaxed italic">
                      "{about.chairWelcome.message}"
                    </blockquote>
                    <div class="border-t border-gray-100 pt-4">
                      <p class="font-semibold text-gray-900">{about.chairWelcome.chair.name}</p>
                      <p class="text-primary-600 font-medium">{about.chairWelcome.chair.title}</p>
                      <p class="text-gray-600 text-sm">{about.chairWelcome.chair.institution}</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Conference Highlights -->
        <div class="animate-card animate-initial">
          <div class="bg-gray-50 rounded-2xl p-8 border border-gray-200">
            <h3 class="text-2xl font-semibold text-gray-900 mb-6">{about.highlights.title}</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {about.highlights.items.map((item: string, index: number) => (
                <div class="flex items-start group hover:bg-white hover:shadow-md rounded-lg p-3 transition-all duration-200">
                  <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-br from-primary-500 to-accent-500 rounded-lg flex items-center justify-center mt-1 group-hover:scale-110 transition-transform duration-200">
                    <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/>
                    </svg>
                  </div>
                  <span class="ml-3 text-gray-700 font-medium">{item}</span>
                </div>
              ))}
            </div>
            
            <div class="mt-8 text-center">
              <a href={about.learnMoreLink.href} class="inline-flex items-center bg-primary-600 hover:bg-primary-700 text-white px-8 py-4 rounded-lg font-semibold transition-all duration-200 shadow-lg hover:shadow-xl hover:scale-105">
                {about.learnMoreLink.text}
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5-5 5M6 12h12"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>
        
      </div>
    </div>
  </div>
</section>

<style>
  /* Scroll animation styles */
  .animate-initial {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
    transition-delay: var(--animation-delay, 0ms);
  }
  
  .animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  .animate-out {
    opacity: 0;
    transform: translateY(50px);
  }
  
  /* Timeline item stagger delays */
  .timeline-item:nth-child(1) { --animation-delay: 0ms; }
  .timeline-item:nth-child(2) { --animation-delay: 150ms; }
  .timeline-item:nth-child(3) { --animation-delay: 300ms; }
  .timeline-item:nth-child(4) { --animation-delay: 450ms; }
  .timeline-item:nth-child(5) { --animation-delay: 600ms; }
  .timeline-item:nth-child(6) { --animation-delay: 750ms; }
  
  /* About section cards stagger */
  .animate-card:nth-child(1) { --animation-delay: 200ms; }
  .animate-card:nth-child(2) { --animation-delay: 400ms; }
  .animate-card:nth-child(3) { --animation-delay: 600ms; }
</style>

<script>
  // Scroll-triggered animations
  class ScrollAnimations {
    private observer: IntersectionObserver;
    
    constructor() {
      this.observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              element.classList.add('animate-in');
              element.classList.remove('animate-out');
            }
          });
        },
        {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        }
      );
    }
    
    public observeElements(selector: string): void {
      const elements = document.querySelectorAll(selector);
      elements.forEach((element) => {
        this.observer.observe(element);
      });
    }
    
    public disconnect(): void {
      this.observer.disconnect();
    }
  }
  
  // Initialize animations when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const scrollAnimations = new ScrollAnimations();
    
    // Animate timeline items and cards
    scrollAnimations.observeElements('.timeline-item');
    scrollAnimations.observeElements('.animate-card');
  });
</script>

<section class="py-16 bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-10 gap-12">
      <!-- Important Dates - Left Column (30% width) -->
      <div class="lg:col-span-3">
        <div class="text-left mb-8">
          <h2 class="text-3xl font-heading font-bold text-gray-900 mb-4">{importantDates.title}</h2>
          <p class="text-lg text-gray-600">{importantDates.subtitle}</p>
        </div>
        
        <div class="relative">
          <div class="space-y-2">
            {importantDates.dates.map((date: ImportantDate, index: number) => (
              <div class="relative">
                {/* Timeline line */}
                {index < importantDates.dates.length - 1 && (
                  <div class="absolute left-4 top-10 w-0.5 h-6 bg-gray-300"></div>
                )}
                
                {/* Timeline dot */}
                <div class="absolute left-2.5 top-5 w-3 h-3 bg-primary-600 rounded-full border-2 border-white shadow-sm"></div>
                
                {/* Content */}
                <div class={`ml-8 rounded-lg p-2 border ${getColorClasses(date.colorScheme)}`}>
                  <div class={`font-bold text-base mb-0.5 ${getTextColor(date.colorScheme)}`}>{date.period}</div>
                  <h3 class="font-semibold text-gray-900 text-sm">{date.title}</h3>
                </div>
              </div>
            ))}
            
            {/* Arrow pointing to conference start */}
            <div class="relative mt-3">
              <div class="absolute left-2.5 top-0 w-3 h-3">
                <svg class="w-6 h-6 text-red-500 transform -translate-x-1.5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              <div class="ml-8 p-2 bg-gradient-to-r from-red-50 to-accent-50 border border-red-200 rounded-lg">
                <div class="text-red-600 font-bold text-base mb-0.5">{importantDates.conferenceStart.date}</div>
                <h3 class="font-semibold text-gray-900 text-sm">{importantDates.conferenceStart.title}</h3>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- About IPAC27 - Right Column (70% width) -->
      <div class="lg:col-span-7">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
          <div>
            <h2 class="text-3xl font-heading font-bold text-gray-900 mb-6">{about.title}</h2>
            {about.description.map((paragraph: string) => (
              <p class="text-lg text-gray-600 mb-6">{paragraph}</p>
            ))}
            <a href={about.learnMoreLink.href} class="inline-flex items-center text-primary-600 hover:text-primary-700 font-semibold">
              {about.learnMoreLink.text}
              <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
          
          <div class="bg-white rounded-lg shadow-lg p-8">
            <h3 class="text-xl font-semibold text-gray-900 mb-6">{about.highlights.title}</h3>
            <ul class="space-y-4">
              {about.highlights.items.map((item: string) => (
                <li class="flex items-start">
                  <div class="flex-shrink-0 w-6 h-6 bg-primary-100 rounded-full flex items-center justify-center mt-1">
                    <div class="w-2 h-2 bg-primary-600 rounded-full"></div>
                  </div>
                  <span class="ml-3 text-gray-600">{item}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
